name: Grafana Packer Image CI Build

on:
  push:
    branches: [ main ]
    paths: 
    - 'grafana/v9.5.3/**'

env:
  PACKER_VERSION: "latest" # or: "latest"
  REPO_NAME: "coredgeio"
  APP_NAME: "certmanager"
  APP_VERSION: "v1.12.2"
  DST_DIR: "grafana/v9.5.3/"

jobs:
  packer:
    runs-on: ubuntu-latest
    name: Run Packer
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup `packer`
        uses: nomuken/setup-packer@v1
        id: setup
        with:
          packer_version: ${{ env.PACKER_VERSION }}
      
      - name: AWS Configure
        id: configure
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ap-south-1
          aws configure set default.output table
          
      - name: Verify AWS Configuration
        run: aws sts get-caller-identity
        
      - name: Copy AWS Credentials and Config
        run: |
          cp $HOME/.aws/credentials grafana/v9.5.3/
          cp $HOME/.aws/config grafana/v9.5.3/
          
      - name: Run `packer init`
        id: init
        run: "cd grafana/v9.5.3/ && packer init grafana.pkr.hcl"
      
      - name: Run `packer validate`
        id: validate
        run: "cd grafana/v9.5.3/ && packer validate grafana.pkr.hcl"
      
      - name: Run `packer build`
        id: build
        run: "cd grafana/v9.5.3/ && packer build grafana.pkr.hcl"
      
      - name: ☢ Image Scan
        uses: aquasecurity/trivy-action@master
        id: scan
        with:
          image-ref: 'coredge/baseos-beta:v9.5.3-0'
          format: 'template'
          template: "@/contrib/html.tpl"
          output: '${{ env.APP_NAME }}-${{ env.APP_VERSION }}-trivy-results.html'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
      
      - name: ⬆ Upload Trivy Image scan results
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Grafana_Trivy_Scan_HTML_Report
          path: '${{ env.APP_NAME }}-${{ env.APP_VERSION }}-trivy-results.html'
      
      - name: Prepare image tag
        run: echo "TAG=$(date +'%F-%H-%M-%S')" >> $GITHUB_ENV  
      
      - name: Tag and Push the packer image to dockerhub
        id: push
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USER}}
          DOCKER_PWD: ${{secrets.DOCKERHUB_PUSH_TOKEN}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PWD
          
          docker tag coredge/baseos-beta:v9.5.3-0 rishabh0197/grafana:${{ env.TAG }}
          docker tag coredge/baseos-beta:v9.5.3-0 rishabh0197/grafana:latest

          docker push rishabh0197/grafana:${{ env.TAG }}
          docker push rishabh0197/grafana:latest
